package net.bluedash.ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.6.0
 * 2012-05-28T19:11:28.368+08:00
 * Generated source version: 2.6.0
 * 
 */
@WebServiceClient(name = "HelloService", 
                  wsdlLocation = "src/hello.wsdl",
                  targetNamespace = "http://bluedash.net/ws") 
public class HelloService_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://bluedash.net/ws", "HelloService");
    public final static QName HelloServiceSOAP = new QName("http://bluedash.net/ws", "HelloServiceSOAP");
    static {
        URL url = HelloService_Service.class.getResource("src/hello.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(HelloService_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "src/hello.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public HelloService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public HelloService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HelloService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns HelloService
     */
    @WebEndpoint(name = "HelloServiceSOAP")
    public HelloService getHelloServiceSOAP() {
        return super.getPort(HelloServiceSOAP, HelloService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HelloService
     */
    @WebEndpoint(name = "HelloServiceSOAP")
    public HelloService getHelloServiceSOAP(WebServiceFeature... features) {
        return super.getPort(HelloServiceSOAP, HelloService.class, features);
    }

}
